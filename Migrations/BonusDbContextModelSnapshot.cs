// <auto-generated />
using System;
using Bonus.API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bonus.API.Migrations
{
    [DbContext(typeof(BonusDbContext))]
    partial class BonusDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bonus.API.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_FUNCIONARIO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaAtuacao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TX_AREA_ATUACAO");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("TX_CARGO");

                    b.Property<string>("CodigoMatricula")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NU_MATRICULA");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_ADMISSAO");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TX_NOME_COMPLETO");

                    b.Property<double>("SalarioBruto")
                        .HasColumnType("float")
                        .HasColumnName("NU_SALARIO_BRUTO");

                    b.HasKey("Id");

                    b.ToTable("TB_FUNCIONARIOS");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaAtuacao = "Diretoria",
                            Cargo = "Funcionário",
                            CodigoMatricula = "123",
                            DataAdmissao = new DateTime(2002, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCompleto = "Gordon Gekko",
                            SalarioBruto = 9000.0
                        },
                        new
                        {
                            Id = 2,
                            AreaAtuacao = "Diretoria",
                            Cargo = "Funcionário",
                            CodigoMatricula = "456",
                            DataAdmissao = new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCompleto = "Bud Fox",
                            SalarioBruto = 8000.0
                        },
                        new
                        {
                            Id = 3,
                            AreaAtuacao = "Relacionamento com cliente",
                            Cargo = "Funcionário",
                            CodigoMatricula = "886",
                            DataAdmissao = new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCompleto = "Darien Taylor",
                            SalarioBruto = 7000.0
                        },
                        new
                        {
                            Id = 4,
                            AreaAtuacao = "Contabilidade",
                            Cargo = "Estagiário",
                            CodigoMatricula = "658",
                            DataAdmissao = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCompleto = "Kate Gekko",
                            SalarioBruto = 2000.0
                        },
                        new
                        {
                            Id = 5,
                            AreaAtuacao = "Financeiro",
                            Cargo = "Funcionário",
                            CodigoMatricula = "358",
                            DataAdmissao = new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCompleto = "Carl Fox",
                            SalarioBruto = 5000.0
                        },
                        new
                        {
                            Id = 6,
                            AreaAtuacao = "Tecnologia",
                            Cargo = "Estagiário",
                            CodigoMatricula = "873",
                            DataAdmissao = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCompleto = "Roger Bames",
                            SalarioBruto = 1000.0
                        },
                        new
                        {
                            Id = 7,
                            AreaAtuacao = "Serviços gerais",
                            Cargo = "Funcionário",
                            CodigoMatricula = "325",
                            DataAdmissao = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCompleto = "Candice Rogers",
                            SalarioBruto = 2000.0
                        },
                        new
                        {
                            Id = 8,
                            AreaAtuacao = "Tecnologia",
                            Cargo = "Funcionário",
                            CodigoMatricula = "863",
                            DataAdmissao = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCompleto = "Stone Livingston",
                            SalarioBruto = 4000.0
                        },
                        new
                        {
                            Id = 9,
                            AreaAtuacao = "Financeiro",
                            Cargo = "Funcionário",
                            CodigoMatricula = "286",
                            DataAdmissao = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCompleto = "Harold Salt",
                            SalarioBruto = 5000.0
                        },
                        new
                        {
                            Id = 10,
                            AreaAtuacao = "Relacionamento com cliente",
                            Cargo = "Estagiário",
                            CodigoMatricula = "458",
                            DataAdmissao = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCompleto = "Rudy Gekko",
                            SalarioBruto = 1000.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
